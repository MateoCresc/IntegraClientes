@model ClienteApp.Data.Models.Cliente

@{
    ViewBag.Title = "Create";
}

<h2>ClienteCreate</h2>


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Cuit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cuit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cuit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RazonSocial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Activo)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
       

<script type="text/javascript">
    $(function () {
        const $cuit = $('#Cuit');
        const $razonSocial = $('#RazonSocial');
        const $telefono = $('#Telefono');
        const $direccion = $('#Direccion');
        const $createButton = $('input[type="submit"]');

        function validarFormulario() {
            const cuitValido = $cuit.val().length === 11 && /^[0-9]+$/.test($cuit.val());
            const razonSocialValida = $razonSocial.val().trim() !== '';
            const telefonoValido = /^[0-9]+$/.test($telefono.val().trim());
            const direccionValida = $direccion.val().trim().length > 0 && $direccion.val().trim().length <= 200;

            if (cuitValido && razonSocialValida && telefonoValido && direccionValida) {
                $createButton.prop('disabled', false);
            } else {
                $createButton.prop('disabled', true);
            }
        }

        $createButton.prop('disabled', true);

        $('input').on('input blur change', function () {
            validarFormulario();
        });

            $('#Cuit').on('blur change', function () {
                var cuit = $(this).val().trim();
                if (cuit.length === 11 && /^[0-9]+$/.test(cuit)) {
                    $.ajax({
                        url: '@Url.Action("GetRazonSocialByCuit")', //Problema con CORS y cree el método para acceder desde backend
                        type: 'GET',
                        dataType: 'json',
                        data: {cuit: cuit},
                        success: function (response) {
                            $('#RazonSocial').val(response);
                        },
                        error: function () {
                            alert('No se pudo obtener la razón social para el CUIT ingresado.');
                        }
                    });
                }
            });
        });

</script>

}
